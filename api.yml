# This is the OpenAPI specification for your service. It is used to generate the client code.
# To generate the server code, use the Gradle task `openApiGenerate`. The 
# generated code will be placed in `build/generate-resources/main`.
#
# We will evaluate you based on how well you design your API.
# 1. How well it follows REST principles.
# 2. How easy it is to understand and use.
#
# References
# 1. https://swagger.io/specification/
openapi: "3.0.0"
info:
  version: 1.0.0
  title: User Service
  license:
    name: MIT
servers:
  - url: http://localhost
paths:
  /register:
    post:
      summary: Registration API.
      operationId: register
      requestBody:
        description: request body for login
        content:
          application/json":
            schema:
              $ref: "#/components/schemas/RegisterRequest"
      responses:
        '200':
          description: Login Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasicResponse"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasicResponse"
  /login:
    post:
      summary: Login API.
      operationId: login
      requestBody:
        description: request body for login
        content:
          application/json":
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        '200':
          description: Login Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasicResponse"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasicResponse"
  /profile:
    get:
      summary: Get Profile API.
      operationId: getProfile
      parameters:
        - in: header
          name: authorization
          schema:
            type: string
          required: true
          description: token for login, will get profile detail based on token that sent
      responses:
        '200':
          description: Login Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasicResponse"
        '403':
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasicResponse"
    put:
      summary: Update Profile API.
      operationId: updateProfile
      parameters:
        - in: header
          name: authorization
          schema:
            type: string
          required: true
          description: token for login, will get profile detail based on token that sent
      requestBody:
        description: request body for update profile
        content:
          application/json":
            schema:
              $ref: "#/components/schemas/ProfileRequest"
      responses:
        '200':
          description: Login Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasicResponse"
        '403':
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasicResponse"
        '409':
          description: Conflicted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasicResponse"

components:
  schemas:
    BasicResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    LoginResponse:
      type: object
      required:
        - id
        - token
      properties:
        id:
          type: integer
        token:
          type: string
    LoginRequest:
      type: object
      required:
        - phone
        - password
      properties:
        phone:
          type: integer
        password:
          type: string
    RegisterRequest:
      type: object
      required:
        - phone
        - fullname
        - password
      properties:
        phone:
          type: integer
        fullname:
          type: string
        password:
          type: string
    RegisterResponse:
      type: object
      required:
        - id
      properties:
        id:
          type: integer
    ProfileRequest:
      type: object
      required:
        - phone
        - fullname
        - password
      properties:
        phone:
          type: integer
        fullname:
          type: string